[
  {
    "Resource": "*",
    "Effect": "Allow",
    "Action": [
      "greengrass:*",
      "cloudformation:ListExports",
      "cloudformation:ListStacks",
      "cloudformation:ListImports",
      "cloudformation:ListStackSetOperations",
      "cloudformation:ListStackInstances",
      "cloudformation:ListTypes",
      "cloudformation:DescribeStacks",
      "cloudformation:ListTypeRegistrations",
      "cloudformation:ListStackSetOperationResults",
      "cloudformation:ListStackSets",
      "cloudformation:ListChangeSets",
      "cloudformation:ListTypeVersions",
      "cloudformation:ListStackResources",
      "iot:*"
    ],
    "Sid": "Robotics"
  },
  {
    "Resource": "arn:aws:iam::*:role/GreengrassV2TokenExchangeRole",
    "Action": "iam:PassRole",
    "Effect": "Allow",
    "Sid": "PassrollforGG"
  },
  {
    "Resource": "*",
    "Action": [
      "cloud9:*",
      "cloudformation:*",
      "ec2messages:*",
      "events:*",
      "iam:CreateServiceLinkedRole",
      "iam:Generate*",
      "iam:Get*",
      "iam:List*",
      "iam:ListRoles",
      "cloudwatch:*",
      "s3:*",
      "sns:*",
      "sqs:*",
      "ssm:*",
      "ssmmessages:*",
      "tag:*"
    ],
    "Effect": "Allow",
    "Sid": "OverlyPermissivePolicy"
  },
  {
    "Condition": {
      "StringEquals": {
        "ec2:InstanceType": [
          "g4dn.2xlarge",
          "g4dn.xlarge",
          "g4dn.4xlarge",
          "m6i.2xlarge"
        ]
      }
    },
    "Resource": [
      "arn:aws:ec2:*:*:instance/*"
    ],
    "Action": "ec2:RunInstances",
    "Effect": "Allow",
    "Sid": "OnlyAllowG4DNInstances"
  },
  {
    "Resource": [
      "arn:aws:ec2:*::image/ami-*",
      "arn:aws:ec2:*:*:subnet/*",
      "arn:aws:ec2:*:*:network-interface/*",
      "arn:aws:ec2:*:*:volume/*",
      "arn:aws:ec2:*:*:key-pair/*",
      "arn:aws:ec2:*:*:security-group/*"
    ],
    "Action": "ec2:RunInstances",
    "Effect": "Allow",
    "Sid": "AllowAllTheOtherRunInstancesResources"
  },
  {
    "Resource": "*",
    "Action": [
      "ec2:Accept*",
      "ec2:Allocate*",
      "ec2:Assign*",
      "ec2:Associate*",
      "ec2:Attach*",
      "ec2:Authorize*",
      "ec2:Bundle*",
      "ec2:Cancel*",
      "ec2:Confirm*",
      "ec2:Copy*",
      "ec2:Create*",
      "ec2:Delete*",
      "ec2:Deregister*",
      "ec2:Describe*",
      "ec2:Detach*",
      "ec2:Disable*",
      "ec2:Disassociate*",
      "ec2:Enable*",
      "ec2:Get*",
      "ec2:Import*",
      "ec2:Modify*",
      "ec2:Monitor*",
      "ec2:Move*",
      "ec2:Reboot*",
      "ec2:Register*",
      "ec2:Reject*",
      "ec2:Release*",
      "ec2:Replace*",
      "ec2:Report*",
      "ec2:Reset*",
      "ec2:Restore*",
      "ec2:Revoke*",
      "ec2:Start*",
      "ec2:Stop*",
      "ec2:Terminate*",
      "ec2:Unassign*",
      "ec2:Unmonitor*",
      "ec2:Search*"
    ],
    "Effect": "Allow",
    "Sid": "AllowAllOtherEC2ActionsExceptSpotAndReserved"
  },
  {
    "Resource": "*",
    "Action": [
      "ec2:ModifyReservedInstances",
      "ec2:PurchaseHostReservation",
      "ec2:PurchaseReservedInstancesOffering",
      "ec2:PurchaseScheduledInstances",
      "rds:PurchaseReservedDBInstancesOffering",
      "dynamodb:PurchaseReservedCapacityOfferings",
      "ec2:CancelSpotFleetRequests",
      "ec2:ModifySpotFleetRequest",
      "ec2:RequestSpotFleet",
      "ec2:RequestSpotInstances",
      "ec2:CancelSpotInstanceRequests",
      "ec2:CreateSpotDatafeedSubscription",
      "ec2:DeleteSpotDatafeedSubscription"
    ],
    "Effect": "Deny",
    "Sid": "DontBuyReservationsOrSpotPlz"
  },
  {
    "Resource": "$$teamRoleArn",
    "Action": "iam:PassRole",
    "Effect": "Allow",
    "Sid": "PassRole"
  }
]
